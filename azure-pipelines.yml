trigger:
- master
stages:
- stage:
  displayName: Build
  jobs:
  - job:
    displayName: Linux Build
    pool:
      vmImage: ubuntu-18.04
    steps:
    - script: >-
        docker run -v $PWD:/build ubuntu:rolling /bin/bash -c "
        cd /build;
        apt-get -y update;
        apt-get -y install python3.7 cython3 g++;
        python3.7 setup.py build --export"
      displayName: Linux Build
  - job:
    displayName: MacOS Build
    pool:
      vmImage: macOS-10.14
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
        architecture: 'x64'
      displayName: 'Set Python Version'
    - script: |
        python -m pip install --upgrade pip setuptools wheel
        pip install Cython --install-option="--no-cython-compile"
      displayName: 'Install Cython'
    - script: python3.7 setup.py build --export
      displayName: MacOS Build
  - job:
    displayName: Windows Build
    pool:
      vmImage: windows-2019
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
        architecture: 'x64'
      displayName: 'Set Python Version'
    - script: |
        python -m pip install --upgrade pip setuptools wheel
        pip install Cython --install-option="--no-cython-compile"
      displayName: 'Install Cython'
    - script: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        python setup.py build --export
      env:
        DISTUTILS_USE_SDK: 1
        PY_VCRUNTIME_REDIST: No
      displayName: Build Windows
- stage:
  displayName: Deploy
  jobs:
    - job: prepareArtifacts
      displayName: Prepare Artifacts
      steps:
      - task: CopyFiles@2
        inputs:
          contents: '*.zip'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - job:
      displayName: Publish Artifacts
      dependsOn: prepareArtifacts
      steps:
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: build
    - job:
      displayName: Update Github Release
      dependsOn: prepareArtifacts
      condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
      steps:
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'JacquesLucke'
          repositoryName: 'JacquesLucke/animation_nodes'
          action: 'edit'
          target: '$(Build.SourceVersion)'
          tag: 'daily'
          releaseNotesSource: 'inline'
          assets: '$(Build.SourcesDirectory)/*.zip'
          assetUploadMode: 'replace'
          isPreRelease: true
          addChangeLog: false
        displayName: 'Update Release'
